package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 01 02:56:14 EST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccContractPricingTermImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        XpeContractId,
        XpeContractVersion,
        XpeContractLine,
        XpePricingTermLine,
        XpePricingTermType,
        XpeQtyMax,
        XpeRate,
        XpeChargeOverMin,
        XpeChargeOverMax,
        XpeChargeDesc,
        XpeRolloverType,
        XpeResetType,
        XpePeriodType,
        XpePeriodNbr,
        XpeIcon,
        XpeIndexChangeType,
        XpeIndexChangeId,
        XpeMetalsIndexVal,
        XpeMetalsIndexPrc1,
        XpeMetalsIndexPrc2,
        XpeMetalsUomMlt,
        XpeMetalsUomDen,
        CreatedBy,
        LastUpdatedBy,
        CreatedDate,
        LastUpdatedDate,
        XpeDccContractCarrier,
        XpeDccContractLine;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int XPECONTRACTID = AttributesEnum.XpeContractId.index();
    public static final int XPECONTRACTVERSION = AttributesEnum.XpeContractVersion.index();
    public static final int XPECONTRACTLINE = AttributesEnum.XpeContractLine.index();
    public static final int XPEPRICINGTERMLINE = AttributesEnum.XpePricingTermLine.index();
    public static final int XPEPRICINGTERMTYPE = AttributesEnum.XpePricingTermType.index();
    public static final int XPEQTYMAX = AttributesEnum.XpeQtyMax.index();
    public static final int XPERATE = AttributesEnum.XpeRate.index();
    public static final int XPECHARGEOVERMIN = AttributesEnum.XpeChargeOverMin.index();
    public static final int XPECHARGEOVERMAX = AttributesEnum.XpeChargeOverMax.index();
    public static final int XPECHARGEDESC = AttributesEnum.XpeChargeDesc.index();
    public static final int XPEROLLOVERTYPE = AttributesEnum.XpeRolloverType.index();
    public static final int XPERESETTYPE = AttributesEnum.XpeResetType.index();
    public static final int XPEPERIODTYPE = AttributesEnum.XpePeriodType.index();
    public static final int XPEPERIODNBR = AttributesEnum.XpePeriodNbr.index();
    public static final int XPEICON = AttributesEnum.XpeIcon.index();
    public static final int XPEINDEXCHANGETYPE = AttributesEnum.XpeIndexChangeType.index();
    public static final int XPEINDEXCHANGEID = AttributesEnum.XpeIndexChangeId.index();
    public static final int XPEMETALSINDEXVAL = AttributesEnum.XpeMetalsIndexVal.index();
    public static final int XPEMETALSINDEXPRC1 = AttributesEnum.XpeMetalsIndexPrc1.index();
    public static final int XPEMETALSINDEXPRC2 = AttributesEnum.XpeMetalsIndexPrc2.index();
    public static final int XPEMETALSUOMMLT = AttributesEnum.XpeMetalsUomMlt.index();
    public static final int XPEMETALSUOMDEN = AttributesEnum.XpeMetalsUomDen.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int XPEDCCCONTRACTCARRIER = AttributesEnum.XpeDccContractCarrier.index();
    public static final int XPEDCCCONTRACTLINE = AttributesEnum.XpeDccContractLine.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccContractPricingTermImpl() {
    }

    /**
     * Gets the attribute value for XpeContractId, using the alias name XpeContractId.
     * @return the value of XpeContractId
     */
    public String getXpeContractId() {
        return (String) getAttributeInternal(XPECONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractId.
     * @param value value to set the XpeContractId
     */
    public void setXpeContractId(String value) {
        setAttributeInternal(XPECONTRACTID, value);
    }

    /**
     * Gets the attribute value for XpeContractVersion, using the alias name XpeContractVersion.
     * @return the value of XpeContractVersion
     */
    public String getXpeContractVersion() {
        return (String) getAttributeInternal(XPECONTRACTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractVersion.
     * @param value value to set the XpeContractVersion
     */
    public void setXpeContractVersion(String value) {
        setAttributeInternal(XPECONTRACTVERSION, value);
    }

    /**
     * Gets the attribute value for XpeContractLine, using the alias name XpeContractLine.
     * @return the value of XpeContractLine
     */
    public String getXpeContractLine() {
        return (String) getAttributeInternal(XPECONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractLine.
     * @param value value to set the XpeContractLine
     */
    public void setXpeContractLine(String value) {
        setAttributeInternal(XPECONTRACTLINE, value);
    }

    /**
     * Gets the attribute value for XpePricingTermLine, using the alias name XpePricingTermLine.
     * @return the value of XpePricingTermLine
     */
    public BigDecimal getXpePricingTermLine() {
        return (BigDecimal) getAttributeInternal(XPEPRICINGTERMLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpePricingTermLine.
     * @param value value to set the XpePricingTermLine
     */
    public void setXpePricingTermLine(BigDecimal value) {
        setAttributeInternal(XPEPRICINGTERMLINE, value);
    }

    /**
     * Gets the attribute value for XpePricingTermType, using the alias name XpePricingTermType.
     * @return the value of XpePricingTermType
     */
    public String getXpePricingTermType() {
        return (String) getAttributeInternal(XPEPRICINGTERMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpePricingTermType.
     * @param value value to set the XpePricingTermType
     */
    public void setXpePricingTermType(String value) {
        setAttributeInternal(XPEPRICINGTERMTYPE, value);
    }

    /**
     * Gets the attribute value for XpeQtyMax, using the alias name XpeQtyMax.
     * @return the value of XpeQtyMax
     */
    public BigDecimal getXpeQtyMax() {
        return (BigDecimal) getAttributeInternal(XPEQTYMAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeQtyMax.
     * @param value value to set the XpeQtyMax
     */
    public void setXpeQtyMax(BigDecimal value) {
        setAttributeInternal(XPEQTYMAX, value);
    }

    /**
     * Gets the attribute value for XpeRate, using the alias name XpeRate.
     * @return the value of XpeRate
     */
    public BigDecimal getXpeRate() {
        return (BigDecimal) getAttributeInternal(XPERATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeRate.
     * @param value value to set the XpeRate
     */
    public void setXpeRate(BigDecimal value) {
        setAttributeInternal(XPERATE, value);
    }

    /**
     * Gets the attribute value for XpeChargeOverMin, using the alias name XpeChargeOverMin.
     * @return the value of XpeChargeOverMin
     */
    public BigDecimal getXpeChargeOverMin() {
        return (BigDecimal) getAttributeInternal(XPECHARGEOVERMIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeChargeOverMin.
     * @param value value to set the XpeChargeOverMin
     */
    public void setXpeChargeOverMin(BigDecimal value) {
        setAttributeInternal(XPECHARGEOVERMIN, value);
    }

    /**
     * Gets the attribute value for XpeChargeOverMax, using the alias name XpeChargeOverMax.
     * @return the value of XpeChargeOverMax
     */
    public BigDecimal getXpeChargeOverMax() {
        return (BigDecimal) getAttributeInternal(XPECHARGEOVERMAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeChargeOverMax.
     * @param value value to set the XpeChargeOverMax
     */
    public void setXpeChargeOverMax(BigDecimal value) {
        setAttributeInternal(XPECHARGEOVERMAX, value);
    }

    /**
     * Gets the attribute value for XpeChargeDesc, using the alias name XpeChargeDesc.
     * @return the value of XpeChargeDesc
     */
    public String getXpeChargeDesc() {
        return (String) getAttributeInternal(XPECHARGEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeChargeDesc.
     * @param value value to set the XpeChargeDesc
     */
    public void setXpeChargeDesc(String value) {
        setAttributeInternal(XPECHARGEDESC, value);
    }

    /**
     * Gets the attribute value for XpeRolloverType, using the alias name XpeRolloverType.
     * @return the value of XpeRolloverType
     */
    public String getXpeRolloverType() {
        return (String) getAttributeInternal(XPEROLLOVERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeRolloverType.
     * @param value value to set the XpeRolloverType
     */
    public void setXpeRolloverType(String value) {
        setAttributeInternal(XPEROLLOVERTYPE, value);
    }

    /**
     * Gets the attribute value for XpeResetType, using the alias name XpeResetType.
     * @return the value of XpeResetType
     */
    public String getXpeResetType() {
        return (String) getAttributeInternal(XPERESETTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeResetType.
     * @param value value to set the XpeResetType
     */
    public void setXpeResetType(String value) {
        setAttributeInternal(XPERESETTYPE, value);
    }

    /**
     * Gets the attribute value for XpePeriodType, using the alias name XpePeriodType.
     * @return the value of XpePeriodType
     */
    public String getXpePeriodType() {
        return (String) getAttributeInternal(XPEPERIODTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpePeriodType.
     * @param value value to set the XpePeriodType
     */
    public void setXpePeriodType(String value) {
        setAttributeInternal(XPEPERIODTYPE, value);
    }

    /**
     * Gets the attribute value for XpePeriodNbr, using the alias name XpePeriodNbr.
     * @return the value of XpePeriodNbr
     */
    public Integer getXpePeriodNbr() {
        return (Integer) getAttributeInternal(XPEPERIODNBR);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpePeriodNbr.
     * @param value value to set the XpePeriodNbr
     */
    public void setXpePeriodNbr(Integer value) {
        setAttributeInternal(XPEPERIODNBR, value);
    }

    /**
     * Gets the attribute value for XpeIcon, using the alias name XpeIcon.
     * @return the value of XpeIcon
     */
    public String getXpeIcon() {
        return (String) getAttributeInternal(XPEICON);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeIcon.
     * @param value value to set the XpeIcon
     */
    public void setXpeIcon(String value) {
        setAttributeInternal(XPEICON, value);
    }

    /**
     * Gets the attribute value for XpeIndexChangeType, using the alias name XpeIndexChangeType.
     * @return the value of XpeIndexChangeType
     */
    public String getXpeIndexChangeType() {
        return (String) getAttributeInternal(XPEINDEXCHANGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeIndexChangeType.
     * @param value value to set the XpeIndexChangeType
     */
    public void setXpeIndexChangeType(String value) {
        setAttributeInternal(XPEINDEXCHANGETYPE, value);
    }

    /**
     * Gets the attribute value for XpeIndexChangeId, using the alias name XpeIndexChangeId.
     * @return the value of XpeIndexChangeId
     */
    public String getXpeIndexChangeId() {
        return (String) getAttributeInternal(XPEINDEXCHANGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeIndexChangeId.
     * @param value value to set the XpeIndexChangeId
     */
    public void setXpeIndexChangeId(String value) {
        setAttributeInternal(XPEINDEXCHANGEID, value);
    }

    /**
     * Gets the attribute value for XpeMetalsIndexVal, using the alias name XpeMetalsIndexVal.
     * @return the value of XpeMetalsIndexVal
     */
    public BigDecimal getXpeMetalsIndexVal() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeMetalsIndexVal.
     * @param value value to set the XpeMetalsIndexVal
     */
    public void setXpeMetalsIndexVal(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXVAL, value);
    }

    /**
     * Gets the attribute value for XpeMetalsIndexPrc1, using the alias name XpeMetalsIndexPrc1.
     * @return the value of XpeMetalsIndexPrc1
     */
    public BigDecimal getXpeMetalsIndexPrc1() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXPRC1);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeMetalsIndexPrc1.
     * @param value value to set the XpeMetalsIndexPrc1
     */
    public void setXpeMetalsIndexPrc1(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXPRC1, value);
    }

    /**
     * Gets the attribute value for XpeMetalsIndexPrc2, using the alias name XpeMetalsIndexPrc2.
     * @return the value of XpeMetalsIndexPrc2
     */
    public BigDecimal getXpeMetalsIndexPrc2() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXPRC2);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeMetalsIndexPrc2.
     * @param value value to set the XpeMetalsIndexPrc2
     */
    public void setXpeMetalsIndexPrc2(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXPRC2, value);
    }

    /**
     * Gets the attribute value for XpeMetalsUomMlt, using the alias name XpeMetalsUomMlt.
     * @return the value of XpeMetalsUomMlt
     */
    public BigDecimal getXpeMetalsUomMlt() {
        return (BigDecimal) getAttributeInternal(XPEMETALSUOMMLT);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeMetalsUomMlt.
     * @param value value to set the XpeMetalsUomMlt
     */
    public void setXpeMetalsUomMlt(BigDecimal value) {
        setAttributeInternal(XPEMETALSUOMMLT, value);
    }

    /**
     * Gets the attribute value for XpeMetalsUomDen, using the alias name XpeMetalsUomDen.
     * @return the value of XpeMetalsUomDen
     */
    public BigDecimal getXpeMetalsUomDen() {
        return (BigDecimal) getAttributeInternal(XPEMETALSUOMDEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeMetalsUomDen.
     * @param value value to set the XpeMetalsUomDen
     */
    public void setXpeMetalsUomDen(BigDecimal value) {
        setAttributeInternal(XPEMETALSUOMDEN, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getXpeDccContractCarrier() {
        return (RowIterator) getAttributeInternal(XPEDCCCONTRACTCARRIER);
    }

    /**
     * @return the associated entity XpeDccContractLineImpl.
     */
    public XpeDccContractLineImpl getXpeDccContractLine() {
        return (XpeDccContractLineImpl) getAttributeInternal(XPEDCCCONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as the associated entity XpeDccContractLineImpl.
     */
    public void setXpeDccContractLine(XpeDccContractLineImpl value) {
        setAttributeInternal(XPEDCCCONTRACTLINE, value);
    }

    /**
     * @param xpeContractId key constituent
     * @param xpeContractVersion key constituent
     * @param xpeContractLine key constituent
     * @param xpePricingTermLine key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String xpeContractId, String xpeContractVersion, String xpeContractLine,
                                       BigDecimal xpePricingTermLine) {
        return new Key(new Object[] { xpeContractId, xpeContractVersion, xpeContractLine, xpePricingTermLine });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.XpeDccContractPricingTerm");
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        String userName = "DB_ADMIN";
        ViewObjectImpl userInfoVO = (ViewObjectImpl)this.getDBTransaction().getRootApplicationModule().findViewObject("XpeDccUserInfoROVO");
        Row userInforVORow = userInfoVO.first();
        if(null!=userInforVORow)
            userName = (String)userInforVORow.getAttribute("USER_NAME");
        //INSERT
        if(i==this.DML_INSERT){
            this.setCreatedBy(userName);
            this.setLastUpdatedBy(userName);
        }
        //UPDATE
        if(i==this.DML_UPDATE) 
            this.setLastUpdatedBy(userName);
        
        super.doDML(i, transactionEvent);
    }
}

