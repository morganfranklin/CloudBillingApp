package model;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 23 18:38:39 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccContractPricingTermViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_XPEDCCCONTRACTPRICINGTERM = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        XpeContractId,
        XpeContractVersion,
        XpeContractLine,
        XpePricingTermLine,
        XpePricingTermType,
        XpeQtyMax,
        XpeRate,
        XpeChargeOverMin,
        XpeChargeOverMax,
        XpeChargeDesc,
        XpeRolloverType,
        XpeResetType,
        XpePeriodType,
        XpePeriodNbr,
        XpeIcon,
        XpeIndexChangeId,
        XpeIndexChangeType,
        XpeMetalsIndexPrc1,
        XpeMetalsIndexPrc2,
        XpeMetalsIndexVal,
        XpeMetalsUomDen,
        XpeMetalsUomMlt,
        XpeDccContractCarrierView,
        XpeDccDicRateTypes1,
        XpeDccDicRolloverTypes1,
        XpeDccDicResetTypes1,
        XpeDccDicPeriods1,
        XpeDccIndexType1,
        XpeDccDicMetalIndexes1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int XPECONTRACTID = AttributesEnum.XpeContractId.index();
    public static final int XPECONTRACTVERSION = AttributesEnum.XpeContractVersion.index();
    public static final int XPECONTRACTLINE = AttributesEnum.XpeContractLine.index();
    public static final int XPEPRICINGTERMLINE = AttributesEnum.XpePricingTermLine.index();
    public static final int XPEPRICINGTERMTYPE = AttributesEnum.XpePricingTermType.index();
    public static final int XPEQTYMAX = AttributesEnum.XpeQtyMax.index();
    public static final int XPERATE = AttributesEnum.XpeRate.index();
    public static final int XPECHARGEOVERMIN = AttributesEnum.XpeChargeOverMin.index();
    public static final int XPECHARGEOVERMAX = AttributesEnum.XpeChargeOverMax.index();
    public static final int XPECHARGEDESC = AttributesEnum.XpeChargeDesc.index();
    public static final int XPEROLLOVERTYPE = AttributesEnum.XpeRolloverType.index();
    public static final int XPERESETTYPE = AttributesEnum.XpeResetType.index();
    public static final int XPEPERIODTYPE = AttributesEnum.XpePeriodType.index();
    public static final int XPEPERIODNBR = AttributesEnum.XpePeriodNbr.index();
    public static final int XPEICON = AttributesEnum.XpeIcon.index();
    public static final int XPEINDEXCHANGEID = AttributesEnum.XpeIndexChangeId.index();
    public static final int XPEINDEXCHANGETYPE = AttributesEnum.XpeIndexChangeType.index();
    public static final int XPEMETALSINDEXPRC1 = AttributesEnum.XpeMetalsIndexPrc1.index();
    public static final int XPEMETALSINDEXPRC2 = AttributesEnum.XpeMetalsIndexPrc2.index();
    public static final int XPEMETALSINDEXVAL = AttributesEnum.XpeMetalsIndexVal.index();
    public static final int XPEMETALSUOMDEN = AttributesEnum.XpeMetalsUomDen.index();
    public static final int XPEMETALSUOMMLT = AttributesEnum.XpeMetalsUomMlt.index();
    public static final int XPEDCCCONTRACTCARRIERVIEW = AttributesEnum.XpeDccContractCarrierView.index();
    public static final int XPEDCCDICRATETYPES1 = AttributesEnum.XpeDccDicRateTypes1.index();
    public static final int XPEDCCDICROLLOVERTYPES1 = AttributesEnum.XpeDccDicRolloverTypes1.index();
    public static final int XPEDCCDICRESETTYPES1 = AttributesEnum.XpeDccDicResetTypes1.index();
    public static final int XPEDCCDICPERIODS1 = AttributesEnum.XpeDccDicPeriods1.index();
    public static final int XPEDCCINDEXTYPE1 = AttributesEnum.XpeDccIndexType1.index();
    public static final int XPEDCCDICMETALINDEXES1 = AttributesEnum.XpeDccDicMetalIndexes1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccContractPricingTermViewRowImpl() {
    }

    /**
     * Gets XpeDccContractPricingTerm entity object.
     * @return the XpeDccContractPricingTerm
     */
    public EntityImpl getXpeDccContractPricingTerm() {
        return (EntityImpl) getEntity(ENTITY_XPEDCCCONTRACTPRICINGTERM);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_ID using the alias name XpeContractId.
     * @return the XPE_CONTRACT_ID
     */
    public String getXpeContractId() {
        return (String) getAttributeInternal(XPECONTRACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_ID using the alias name XpeContractId.
     * @param value value to set the XPE_CONTRACT_ID
     */
    public void setXpeContractId(String value) {
        setAttributeInternal(XPECONTRACTID, value);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_VERSION using the alias name XpeContractVersion.
     * @return the XPE_CONTRACT_VERSION
     */
    public String getXpeContractVersion() {
        return (String) getAttributeInternal(XPECONTRACTVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_VERSION using the alias name XpeContractVersion.
     * @param value value to set the XPE_CONTRACT_VERSION
     */
    public void setXpeContractVersion(String value) {
        setAttributeInternal(XPECONTRACTVERSION, value);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_LINE using the alias name XpeContractLine.
     * @return the XPE_CONTRACT_LINE
     */
    public String getXpeContractLine() {
        return (String) getAttributeInternal(XPECONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_LINE using the alias name XpeContractLine.
     * @param value value to set the XPE_CONTRACT_LINE
     */
    public void setXpeContractLine(String value) {
        setAttributeInternal(XPECONTRACTLINE, value);
    }

    /**
     * Gets the attribute value for XPE_PRICING_TERM_LINE using the alias name XpePricingTermLine.
     * @return the XPE_PRICING_TERM_LINE
     */
    public BigDecimal getXpePricingTermLine() {
        return (BigDecimal) getAttributeInternal(XPEPRICINGTERMLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_PRICING_TERM_LINE using the alias name XpePricingTermLine.
     * @param value value to set the XPE_PRICING_TERM_LINE
     */
    public void setXpePricingTermLine(BigDecimal value) {
        setAttributeInternal(XPEPRICINGTERMLINE, value);
    }

    /**
     * Gets the attribute value for XPE_PRICING_TERM_TYPE using the alias name XpePricingTermType.
     * @return the XPE_PRICING_TERM_TYPE
     */
    public String getXpePricingTermType() {
        return (String) getAttributeInternal(XPEPRICINGTERMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_PRICING_TERM_TYPE using the alias name XpePricingTermType.
     * @param value value to set the XPE_PRICING_TERM_TYPE
     */
    public void setXpePricingTermType(String value) {
        setAttributeInternal(XPEPRICINGTERMTYPE, value);
    }

    /**
     * Gets the attribute value for XPE_QTY_MAX using the alias name XpeQtyMax.
     * @return the XPE_QTY_MAX
     */
    public BigDecimal getXpeQtyMax() {
        return (BigDecimal) getAttributeInternal(XPEQTYMAX);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_QTY_MAX using the alias name XpeQtyMax.
     * @param value value to set the XPE_QTY_MAX
     */
    public void setXpeQtyMax(BigDecimal value) {
        setAttributeInternal(XPEQTYMAX, value);
    }

    /**
     * Gets the attribute value for XPE_RATE using the alias name XpeRate.
     * @return the XPE_RATE
     */
    public BigDecimal getXpeRate() {
        return (BigDecimal) getAttributeInternal(XPERATE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_RATE using the alias name XpeRate.
     * @param value value to set the XPE_RATE
     */
    public void setXpeRate(BigDecimal value) {
        setAttributeInternal(XPERATE, value);
    }

    /**
     * Gets the attribute value for XPE_CHARGE_OVER_MIN using the alias name XpeChargeOverMin.
     * @return the XPE_CHARGE_OVER_MIN
     */
    public BigDecimal getXpeChargeOverMin() {
        return (BigDecimal) getAttributeInternal(XPECHARGEOVERMIN);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CHARGE_OVER_MIN using the alias name XpeChargeOverMin.
     * @param value value to set the XPE_CHARGE_OVER_MIN
     */
    public void setXpeChargeOverMin(BigDecimal value) {
        setAttributeInternal(XPECHARGEOVERMIN, value);
    }

    /**
     * Gets the attribute value for XPE_CHARGE_OVER_MAX using the alias name XpeChargeOverMax.
     * @return the XPE_CHARGE_OVER_MAX
     */
    public BigDecimal getXpeChargeOverMax() {
        return (BigDecimal) getAttributeInternal(XPECHARGEOVERMAX);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CHARGE_OVER_MAX using the alias name XpeChargeOverMax.
     * @param value value to set the XPE_CHARGE_OVER_MAX
     */
    public void setXpeChargeOverMax(BigDecimal value) {
        setAttributeInternal(XPECHARGEOVERMAX, value);
    }

    /**
     * Gets the attribute value for XPE_CHARGE_DESC using the alias name XpeChargeDesc.
     * @return the XPE_CHARGE_DESC
     */
    public String getXpeChargeDesc() {
        return (String) getAttributeInternal(XPECHARGEDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CHARGE_DESC using the alias name XpeChargeDesc.
     * @param value value to set the XPE_CHARGE_DESC
     */
    public void setXpeChargeDesc(String value) {
        setAttributeInternal(XPECHARGEDESC, value);
    }

    /**
     * Gets the attribute value for XPE_ROLLOVER_TYPE using the alias name XpeRolloverType.
     * @return the XPE_ROLLOVER_TYPE
     */
    public String getXpeRolloverType() {
        return (String) getAttributeInternal(XPEROLLOVERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_ROLLOVER_TYPE using the alias name XpeRolloverType.
     * @param value value to set the XPE_ROLLOVER_TYPE
     */
    public void setXpeRolloverType(String value) {
        setAttributeInternal(XPEROLLOVERTYPE, value);
    }

    /**
     * Gets the attribute value for XPE_RESET_TYPE using the alias name XpeResetType.
     * @return the XPE_RESET_TYPE
     */
    public String getXpeResetType() {
        return (String) getAttributeInternal(XPERESETTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_RESET_TYPE using the alias name XpeResetType.
     * @param value value to set the XPE_RESET_TYPE
     */
    public void setXpeResetType(String value) {
        setAttributeInternal(XPERESETTYPE, value);
    }

    /**
     * Gets the attribute value for XPE_PERIOD_TYPE using the alias name XpePeriodType.
     * @return the XPE_PERIOD_TYPE
     */
    public String getXpePeriodType() {
        return (String) getAttributeInternal(XPEPERIODTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_PERIOD_TYPE using the alias name XpePeriodType.
     * @param value value to set the XPE_PERIOD_TYPE
     */
    public void setXpePeriodType(String value) {
        setAttributeInternal(XPEPERIODTYPE, value);
    }

    /**
     * Gets the attribute value for XPE_PERIOD_NBR using the alias name XpePeriodNbr.
     * @return the XPE_PERIOD_NBR
     */
    public Integer getXpePeriodNbr() {
        return (Integer) getAttributeInternal(XPEPERIODNBR);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_PERIOD_NBR using the alias name XpePeriodNbr.
     * @param value value to set the XPE_PERIOD_NBR
     */
    public void setXpePeriodNbr(Integer value) {
        setAttributeInternal(XPEPERIODNBR, value);
    }

    /**
     * Gets the attribute value for XPE_ICON using the alias name XpeIcon.
     * @return the XPE_ICON
     */
    public String getXpeIcon() {
        return (String) getAttributeInternal(XPEICON);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_ICON using the alias name XpeIcon.
     * @param value value to set the XPE_ICON
     */
    public void setXpeIcon(String value) {
        setAttributeInternal(XPEICON, value);
    }

    /**
     * Gets the attribute value for XPE_INDEX_CHANGE_ID using the alias name XpeIndexChangeId.
     * @return the XPE_INDEX_CHANGE_ID
     */
    public String getXpeIndexChangeId() {
        return (String) getAttributeInternal(XPEINDEXCHANGEID);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_INDEX_CHANGE_ID using the alias name XpeIndexChangeId.
     * @param value value to set the XPE_INDEX_CHANGE_ID
     */
    public void setXpeIndexChangeId(String value) {
        setAttributeInternal(XPEINDEXCHANGEID, value);
    }

    /**
     * Gets the attribute value for XPE_INDEX_CHANGE_TYPE using the alias name XpeIndexChangeType.
     * @return the XPE_INDEX_CHANGE_TYPE
     */
    public String getXpeIndexChangeType() {
        return (String) getAttributeInternal(XPEINDEXCHANGETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_INDEX_CHANGE_TYPE using the alias name XpeIndexChangeType.
     * @param value value to set the XPE_INDEX_CHANGE_TYPE
     */
    public void setXpeIndexChangeType(String value) {
        setAttributeInternal(XPEINDEXCHANGETYPE, value);
    }

    /**
     * Gets the attribute value for XPE_METALS_INDEX_PRC1 using the alias name XpeMetalsIndexPrc1.
     * @return the XPE_METALS_INDEX_PRC1
     */
    public BigDecimal getXpeMetalsIndexPrc1() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXPRC1);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_METALS_INDEX_PRC1 using the alias name XpeMetalsIndexPrc1.
     * @param value value to set the XPE_METALS_INDEX_PRC1
     */
    public void setXpeMetalsIndexPrc1(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXPRC1, value);
    }

    /**
     * Gets the attribute value for XPE_METALS_INDEX_PRC2 using the alias name XpeMetalsIndexPrc2.
     * @return the XPE_METALS_INDEX_PRC2
     */
    public BigDecimal getXpeMetalsIndexPrc2() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXPRC2);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_METALS_INDEX_PRC2 using the alias name XpeMetalsIndexPrc2.
     * @param value value to set the XPE_METALS_INDEX_PRC2
     */
    public void setXpeMetalsIndexPrc2(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXPRC2, value);
    }

    /**
     * Gets the attribute value for XPE_METALS_INDEX_VAL using the alias name XpeMetalsIndexVal.
     * @return the XPE_METALS_INDEX_VAL
     */
    public BigDecimal getXpeMetalsIndexVal() {
        return (BigDecimal) getAttributeInternal(XPEMETALSINDEXVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_METALS_INDEX_VAL using the alias name XpeMetalsIndexVal.
     * @param value value to set the XPE_METALS_INDEX_VAL
     */
    public void setXpeMetalsIndexVal(BigDecimal value) {
        setAttributeInternal(XPEMETALSINDEXVAL, value);
    }

    /**
     * Gets the attribute value for XPE_METALS_UOM_DEN using the alias name XpeMetalsUomDen.
     * @return the XPE_METALS_UOM_DEN
     */
    public BigDecimal getXpeMetalsUomDen() {
        return (BigDecimal) getAttributeInternal(XPEMETALSUOMDEN);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_METALS_UOM_DEN using the alias name XpeMetalsUomDen.
     * @param value value to set the XPE_METALS_UOM_DEN
     */
    public void setXpeMetalsUomDen(BigDecimal value) {
        setAttributeInternal(XPEMETALSUOMDEN, value);
    }

    /**
     * Gets the attribute value for XPE_METALS_UOM_MLT using the alias name XpeMetalsUomMlt.
     * @return the XPE_METALS_UOM_MLT
     */
    public BigDecimal getXpeMetalsUomMlt() {
        return (BigDecimal) getAttributeInternal(XPEMETALSUOMMLT);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_METALS_UOM_MLT using the alias name XpeMetalsUomMlt.
     * @param value value to set the XPE_METALS_UOM_MLT
     */
    public void setXpeMetalsUomMlt(BigDecimal value) {
        setAttributeInternal(XPEMETALSUOMMLT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XpeDccContractCarrierView.
     */
    public RowIterator getXpeDccContractCarrierView() {
        return (RowIterator) getAttributeInternal(XPEDCCCONTRACTCARRIERVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicRateTypes1.
     */
    public RowSet getXpeDccDicRateTypes1() {
        return (RowSet) getAttributeInternal(XPEDCCDICRATETYPES1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicRolloverTypes1.
     */
    public RowSet getXpeDccDicRolloverTypes1() {
        return (RowSet) getAttributeInternal(XPEDCCDICROLLOVERTYPES1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicResetTypes1.
     */
    public RowSet getXpeDccDicResetTypes1() {
        return (RowSet) getAttributeInternal(XPEDCCDICRESETTYPES1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicPeriods1.
     */
    public RowSet getXpeDccDicPeriods1() {
        return (RowSet) getAttributeInternal(XPEDCCDICPERIODS1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccIndexType1.
     */
    public RowSet getXpeDccIndexType1() {
        return (RowSet) getAttributeInternal(XPEDCCINDEXTYPE1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicMetalIndexes1.
     */
    public RowSet getXpeDccDicMetalIndexes1() {
        return (RowSet) getAttributeInternal(XPEDCCDICMETALINDEXES1);
    }
}

