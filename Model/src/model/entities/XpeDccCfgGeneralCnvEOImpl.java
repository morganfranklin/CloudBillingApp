package model.entities;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 20 07:25:53 EDT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccCfgGeneralCnvEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        GeneralCnvId,
        CarrierId,
        OriginId,
        DestinationId,
        MaterialId,
        PcsShortNameId,
        TranslationConsumer,
        ConversionValue,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        Inactive,
        InactiveDate,
        TohBusinessType,
        TohPayType,
        Country,
        TohBusnPaySrc,
        DubSiteLicense;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int GENERALCNVID = AttributesEnum.GeneralCnvId.index();
    public static final int CARRIERID = AttributesEnum.CarrierId.index();
    public static final int ORIGINID = AttributesEnum.OriginId.index();
    public static final int DESTINATIONID = AttributesEnum.DestinationId.index();
    public static final int MATERIALID = AttributesEnum.MaterialId.index();
    public static final int PCSSHORTNAMEID = AttributesEnum.PcsShortNameId.index();
    public static final int TRANSLATIONCONSUMER = AttributesEnum.TranslationConsumer.index();
    public static final int CONVERSIONVALUE = AttributesEnum.ConversionValue.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int INACTIVE = AttributesEnum.Inactive.index();
    public static final int INACTIVEDATE = AttributesEnum.InactiveDate.index();
    public static final int TOHBUSINESSTYPE = AttributesEnum.TohBusinessType.index();
    public static final int TOHPAYTYPE = AttributesEnum.TohPayType.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int TOHBUSNPAYSRC = AttributesEnum.TohBusnPaySrc.index();
    public static final int DUBSITELICENSE = AttributesEnum.DubSiteLicense.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccCfgGeneralCnvEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entities.XpeDccCfgGeneralCnvEO");
    }


    /**
     * Gets the attribute value for GeneralCnvId, using the alias name GeneralCnvId.
     * @return the value of GeneralCnvId
     */
    public String getGeneralCnvId() {
        return (String) getAttributeInternal(GENERALCNVID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GeneralCnvId.
     * @param value value to set the GeneralCnvId
     */
    public void setGeneralCnvId(String value) {
        setAttributeInternal(GENERALCNVID, value);
    }

    /**
     * Gets the attribute value for CarrierId, using the alias name CarrierId.
     * @return the value of CarrierId
     */
    public String getCarrierId() {
        return (String) getAttributeInternal(CARRIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CarrierId.
     * @param value value to set the CarrierId
     */
    public void setCarrierId(String value) {
        setAttributeInternal(CARRIERID, value);
    }

    /**
     * Gets the attribute value for OriginId, using the alias name OriginId.
     * @return the value of OriginId
     */
    public String getOriginId() {
        return (String) getAttributeInternal(ORIGINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OriginId.
     * @param value value to set the OriginId
     */
    public void setOriginId(String value) {
        setAttributeInternal(ORIGINID, value);
    }

    /**
     * Gets the attribute value for DestinationId, using the alias name DestinationId.
     * @return the value of DestinationId
     */
    public String getDestinationId() {
        return (String) getAttributeInternal(DESTINATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DestinationId.
     * @param value value to set the DestinationId
     */
    public void setDestinationId(String value) {
        setAttributeInternal(DESTINATIONID, value);
    }

    /**
     * Gets the attribute value for MaterialId, using the alias name MaterialId.
     * @return the value of MaterialId
     */
    public String getMaterialId() {
        return (String) getAttributeInternal(MATERIALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaterialId.
     * @param value value to set the MaterialId
     */
    public void setMaterialId(String value) {
        setAttributeInternal(MATERIALID, value);
    }

    /**
     * Gets the attribute value for PcsShortNameId, using the alias name PcsShortNameId.
     * @return the value of PcsShortNameId
     */
    public String getPcsShortNameId() {
        return (String) getAttributeInternal(PCSSHORTNAMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PcsShortNameId.
     * @param value value to set the PcsShortNameId
     */
    public void setPcsShortNameId(String value) {
        setAttributeInternal(PCSSHORTNAMEID, value);
    }

    /**
     * Gets the attribute value for TranslationConsumer, using the alias name TranslationConsumer.
     * @return the value of TranslationConsumer
     */
    public String getTranslationConsumer() {
        return (String) getAttributeInternal(TRANSLATIONCONSUMER);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranslationConsumer.
     * @param value value to set the TranslationConsumer
     */
    public void setTranslationConsumer(String value) {
        setAttributeInternal(TRANSLATIONCONSUMER, value);
    }

    /**
     * Gets the attribute value for ConversionValue, using the alias name ConversionValue.
     * @return the value of ConversionValue
     */
    public String getConversionValue() {
        return (String) getAttributeInternal(CONVERSIONVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConversionValue.
     * @param value value to set the ConversionValue
     */
    public void setConversionValue(String value) {
        setAttributeInternal(CONVERSIONVALUE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }


    /**
     * Gets the attribute value for Inactive, using the alias name Inactive.
     * @return the value of Inactive
     */
    public String getInactive() {
        return (String) getAttributeInternal(INACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inactive.
     * @param value value to set the Inactive
     */
    public void setInactive(String value) {
        setAttributeInternal(INACTIVE, value);
    }

    /**
     * Gets the attribute value for InactiveDate, using the alias name InactiveDate.
     * @return the value of InactiveDate
     */
    public Timestamp getInactiveDate() {
        return (Timestamp) getAttributeInternal(INACTIVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactiveDate.
     * @param value value to set the InactiveDate
     */
    public void setInactiveDate(Timestamp value) {
        setAttributeInternal(INACTIVEDATE, value);
    }

    /**
     * Gets the attribute value for TohBusinessType, using the alias name TohBusinessType.
     * @return the value of TohBusinessType
     */
    public String getTohBusinessType() {
        return (String) getAttributeInternal(TOHBUSINESSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TohBusinessType.
     * @param value value to set the TohBusinessType
     */
    public void setTohBusinessType(String value) {
        setAttributeInternal(TOHBUSINESSTYPE, value);
    }

    /**
     * Gets the attribute value for TohPayType, using the alias name TohPayType.
     * @return the value of TohPayType
     */
    public String getTohPayType() {
        return (String) getAttributeInternal(TOHPAYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TohPayType.
     * @param value value to set the TohPayType
     */
    public void setTohPayType(String value) {
        setAttributeInternal(TOHPAYTYPE, value);
    }

    /**
     * Gets the attribute value for Country, using the alias name Country.
     * @return the value of Country
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Country.
     * @param value value to set the Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for TohBusnPaySrc, using the alias name TohBusnPaySrc.
     * @return the value of TohBusnPaySrc
     */
    public String getTohBusnPaySrc() {
        return (String) getAttributeInternal(TOHBUSNPAYSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for TohBusnPaySrc.
     * @param value value to set the TohBusnPaySrc
     */
    public void setTohBusnPaySrc(String value) {
        setAttributeInternal(TOHBUSNPAYSRC, value);
    }


    /**
     * Gets the attribute value for DubSiteLicense, using the alias name DubSiteLicense.
     * @return the value of DubSiteLicense
     */
    public String getDubSiteLicense() {
        return (String) getAttributeInternal(DUBSITELICENSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DubSiteLicense.
     * @param value value to set the DubSiteLicense
     */
    public void setDubSiteLicense(String value) {
        setAttributeInternal(DUBSITELICENSE, value);
    }

    /**
     * @param generalCnvId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String generalCnvId) {
        return new Key(new Object[] { generalCnvId });
    }

    protected String nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber().toString();
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        String userName = "DB_ADMIN";
        ViewObjectImpl userInfoVO = (ViewObjectImpl)this.getDBTransaction().getRootApplicationModule().findViewObject("XpeDccUserInfoROVO");
        Row userInforVORow = userInfoVO.first();
        if(null!=userInforVORow)
            userName = (String)userInforVORow.getAttribute("USER_NAME");
        //INSERT
        if(i==this.DML_INSERT){
            this.setCreatedBy(userName);
            this.setLastUpdatedBy(userName);
        }
        //UPDATE
        if(i==this.DML_UPDATE) 
            this.setLastUpdatedBy(userName);
        
        super.doDML(i, transactionEvent);
    }
}

