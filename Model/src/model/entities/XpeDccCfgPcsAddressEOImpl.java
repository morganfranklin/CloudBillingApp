package model.entities;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 01 15:38:20 EST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccCfgPcsAddressEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SiteId,
        SiteAddress1,
        SiteAddress2,
        SiteCity,
        SiteState,
        SitePostal,
        SiteOperatingHours,
        SiteAddressId,
        CreatedBy,
        LastUpdatedBy,
        CreatedDate,
        LastUpdatedDate,
        XpeDccCfgPcsEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SITEID = AttributesEnum.SiteId.index();
    public static final int SITEADDRESS1 = AttributesEnum.SiteAddress1.index();
    public static final int SITEADDRESS2 = AttributesEnum.SiteAddress2.index();
    public static final int SITECITY = AttributesEnum.SiteCity.index();
    public static final int SITESTATE = AttributesEnum.SiteState.index();
    public static final int SITEPOSTAL = AttributesEnum.SitePostal.index();
    public static final int SITEOPERATINGHOURS = AttributesEnum.SiteOperatingHours.index();
    public static final int SITEADDRESSID = AttributesEnum.SiteAddressId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int XPEDCCCFGPCSEO = AttributesEnum.XpeDccCfgPcsEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccCfgPcsAddressEOImpl() {
    }

    /**
     * Gets the attribute value for SiteId, using the alias name SiteId.
     * @return the value of SiteId
     */
    public String getSiteId() {
        return (String) getAttributeInternal(SITEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteId.
     * @param value value to set the SiteId
     */
    public void setSiteId(String value) {
        setAttributeInternal(SITEID, value);
    }

    /**
     * Gets the attribute value for SiteAddress1, using the alias name SiteAddress1.
     * @return the value of SiteAddress1
     */
    public String getSiteAddress1() {
        return (String) getAttributeInternal(SITEADDRESS1);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteAddress1.
     * @param value value to set the SiteAddress1
     */
    public void setSiteAddress1(String value) {
        setAttributeInternal(SITEADDRESS1, value);
    }

    /**
     * Gets the attribute value for SiteAddress2, using the alias name SiteAddress2.
     * @return the value of SiteAddress2
     */
    public String getSiteAddress2() {
        return (String) getAttributeInternal(SITEADDRESS2);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteAddress2.
     * @param value value to set the SiteAddress2
     */
    public void setSiteAddress2(String value) {
        setAttributeInternal(SITEADDRESS2, value);
    }

    /**
     * Gets the attribute value for SiteCity, using the alias name SiteCity.
     * @return the value of SiteCity
     */
    public String getSiteCity() {
        return (String) getAttributeInternal(SITECITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteCity.
     * @param value value to set the SiteCity
     */
    public void setSiteCity(String value) {
        setAttributeInternal(SITECITY, value);
    }

    /**
     * Gets the attribute value for SiteState, using the alias name SiteState.
     * @return the value of SiteState
     */
    public String getSiteState() {
        return (String) getAttributeInternal(SITESTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteState.
     * @param value value to set the SiteState
     */
    public void setSiteState(String value) {
        setAttributeInternal(SITESTATE, value);
    }

    /**
     * Gets the attribute value for SitePostal, using the alias name SitePostal.
     * @return the value of SitePostal
     */
    public String getSitePostal() {
        return (String) getAttributeInternal(SITEPOSTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for SitePostal.
     * @param value value to set the SitePostal
     */
    public void setSitePostal(String value) {
        setAttributeInternal(SITEPOSTAL, value);
    }

    /**
     * Gets the attribute value for SiteOperatingHours, using the alias name SiteOperatingHours.
     * @return the value of SiteOperatingHours
     */
    public String getSiteOperatingHours() {
        return (String) getAttributeInternal(SITEOPERATINGHOURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteOperatingHours.
     * @param value value to set the SiteOperatingHours
     */
    public void setSiteOperatingHours(String value) {
        setAttributeInternal(SITEOPERATINGHOURS, value);
    }

    /**
     * Gets the attribute value for SiteAddressId, using the alias name SiteAddressId.
     * @return the value of SiteAddressId
     */
    public String getSiteAddressId() {
        return (String) getAttributeInternal(SITEADDRESSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiteAddressId.
     * @param value value to set the SiteAddressId
     */
    public void setSiteAddressId(String value) {
        setAttributeInternal(SITEADDRESSID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * @return the associated entity XpeDccCfgPcsEOImpl.
     */
    public XpeDccCfgPcsEOImpl getXpeDccCfgPcsEO() {
        return (XpeDccCfgPcsEOImpl) getAttributeInternal(XPEDCCCFGPCSEO);
    }

    /**
     * Sets <code>value</code> as the associated entity XpeDccCfgPcsEOImpl.
     */
    public void setXpeDccCfgPcsEO(XpeDccCfgPcsEOImpl value) {
        setAttributeInternal(XPEDCCCFGPCSEO, value);
    }

    /**
     * @param siteId key constituent
     * @param siteAddressId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String siteId, String siteAddressId) {
        return new Key(new Object[] { siteId, siteAddressId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entities.XpeDccCfgPcsAddressEO");
    }


    protected String nextVal(String sequenceName) {
        SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
        return s.getSequenceNumber().toString();
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        String userName = "DB_ADMIN";
        ViewObjectImpl userInfoVO = (ViewObjectImpl)this.getDBTransaction().getRootApplicationModule().findViewObject("XpeDccUserInfoROVO");
        Row userInforVORow = userInfoVO.first();
        if(null!=userInforVORow)
            userName = (String)userInforVORow.getAttribute("USER_NAME");
        //INSERT
        if(i==this.DML_INSERT){
            this.setCreatedBy(userName);
            this.setLastUpdatedBy(userName);
        }
        //UPDATE
        if(i==this.DML_UPDATE) 
            this.setLastUpdatedBy(userName);
        
        super.doDML(i, transactionEvent);
    }
}

