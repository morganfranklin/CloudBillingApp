package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 01 02:56:57 EST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccContractPricingOverImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        XpeContractId,
        XpeContractLine,
        XpeContractVersion,
        XpeContractOverNbr,
        XpeOverType,
        XpeOverStart,
        XpeOverEnd,
        XpeSourceFld,
        XpeCondition,
        XpeCheck,
        XpeTargetFld,
        XpeOverMsg,
        XpeOverDesc,
        CreatedBy,
        LastUpdatedBy,
        CreatedDate,
        LastUpdatedDate,
        XpeDccContractLine;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int XPECONTRACTID = AttributesEnum.XpeContractId.index();
    public static final int XPECONTRACTLINE = AttributesEnum.XpeContractLine.index();
    public static final int XPECONTRACTVERSION = AttributesEnum.XpeContractVersion.index();
    public static final int XPECONTRACTOVERNBR = AttributesEnum.XpeContractOverNbr.index();
    public static final int XPEOVERTYPE = AttributesEnum.XpeOverType.index();
    public static final int XPEOVERSTART = AttributesEnum.XpeOverStart.index();
    public static final int XPEOVEREND = AttributesEnum.XpeOverEnd.index();
    public static final int XPESOURCEFLD = AttributesEnum.XpeSourceFld.index();
    public static final int XPECONDITION = AttributesEnum.XpeCondition.index();
    public static final int XPECHECK = AttributesEnum.XpeCheck.index();
    public static final int XPETARGETFLD = AttributesEnum.XpeTargetFld.index();
    public static final int XPEOVERMSG = AttributesEnum.XpeOverMsg.index();
    public static final int XPEOVERDESC = AttributesEnum.XpeOverDesc.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int XPEDCCCONTRACTLINE = AttributesEnum.XpeDccContractLine.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccContractPricingOverImpl() {
    }

    /**
     * Gets the attribute value for XpeContractId, using the alias name XpeContractId.
     * @return the value of XpeContractId
     */
    public String getXpeContractId() {
        return (String) getAttributeInternal(XPECONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractId.
     * @param value value to set the XpeContractId
     */
    public void setXpeContractId(String value) {
        setAttributeInternal(XPECONTRACTID, value);
    }

    /**
     * Gets the attribute value for XpeContractLine, using the alias name XpeContractLine.
     * @return the value of XpeContractLine
     */
    public String getXpeContractLine() {
        return (String) getAttributeInternal(XPECONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractLine.
     * @param value value to set the XpeContractLine
     */
    public void setXpeContractLine(String value) {
        setAttributeInternal(XPECONTRACTLINE, value);
    }

    /**
     * Gets the attribute value for XpeContractVersion, using the alias name XpeContractVersion.
     * @return the value of XpeContractVersion
     */
    public String getXpeContractVersion() {
        return (String) getAttributeInternal(XPECONTRACTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractVersion.
     * @param value value to set the XpeContractVersion
     */
    public void setXpeContractVersion(String value) {
        setAttributeInternal(XPECONTRACTVERSION, value);
    }

    /**
     * Gets the attribute value for XpeContractOverNbr, using the alias name XpeContractOverNbr.
     * @return the value of XpeContractOverNbr
     */
    public BigDecimal getXpeContractOverNbr() {
        return (BigDecimal) getAttributeInternal(XPECONTRACTOVERNBR);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractOverNbr.
     * @param value value to set the XpeContractOverNbr
     */
    public void setXpeContractOverNbr(BigDecimal value) {
        setAttributeInternal(XPECONTRACTOVERNBR, value);
    }

    /**
     * Gets the attribute value for XpeOverType, using the alias name XpeOverType.
     * @return the value of XpeOverType
     */
    public String getXpeOverType() {
        return (String) getAttributeInternal(XPEOVERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeOverType.
     * @param value value to set the XpeOverType
     */
    public void setXpeOverType(String value) {
        setAttributeInternal(XPEOVERTYPE, value);
    }

    /**
     * Gets the attribute value for XpeOverStart, using the alias name XpeOverStart.
     * @return the value of XpeOverStart
     */
    public Timestamp getXpeOverStart() {
        return (Timestamp) getAttributeInternal(XPEOVERSTART);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeOverStart.
     * @param value value to set the XpeOverStart
     */
    public void setXpeOverStart(Timestamp value) {
        setAttributeInternal(XPEOVERSTART, value);
    }

    /**
     * Gets the attribute value for XpeOverEnd, using the alias name XpeOverEnd.
     * @return the value of XpeOverEnd
     */
    public Timestamp getXpeOverEnd() {
        return (Timestamp) getAttributeInternal(XPEOVEREND);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeOverEnd.
     * @param value value to set the XpeOverEnd
     */
    public void setXpeOverEnd(Timestamp value) {
        setAttributeInternal(XPEOVEREND, value);
    }

    /**
     * Gets the attribute value for XpeSourceFld, using the alias name XpeSourceFld.
     * @return the value of XpeSourceFld
     */
    public String getXpeSourceFld() {
        return (String) getAttributeInternal(XPESOURCEFLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeSourceFld.
     * @param value value to set the XpeSourceFld
     */
    public void setXpeSourceFld(String value) {
        setAttributeInternal(XPESOURCEFLD, value);
    }

    /**
     * Gets the attribute value for XpeCondition, using the alias name XpeCondition.
     * @return the value of XpeCondition
     */
    public String getXpeCondition() {
        return (String) getAttributeInternal(XPECONDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeCondition.
     * @param value value to set the XpeCondition
     */
    public void setXpeCondition(String value) {
        setAttributeInternal(XPECONDITION, value);
    }

    /**
     * Gets the attribute value for XpeCheck, using the alias name XpeCheck.
     * @return the value of XpeCheck
     */
    public String getXpeCheck() {
        return (String) getAttributeInternal(XPECHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeCheck.
     * @param value value to set the XpeCheck
     */
    public void setXpeCheck(String value) {
        setAttributeInternal(XPECHECK, value);
    }

    /**
     * Gets the attribute value for XpeTargetFld, using the alias name XpeTargetFld.
     * @return the value of XpeTargetFld
     */
    public String getXpeTargetFld() {
        return (String) getAttributeInternal(XPETARGETFLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeTargetFld.
     * @param value value to set the XpeTargetFld
     */
    public void setXpeTargetFld(String value) {
        setAttributeInternal(XPETARGETFLD, value);
    }

    /**
     * Gets the attribute value for XpeOverMsg, using the alias name XpeOverMsg.
     * @return the value of XpeOverMsg
     */
    public String getXpeOverMsg() {
        return (String) getAttributeInternal(XPEOVERMSG);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeOverMsg.
     * @param value value to set the XpeOverMsg
     */
    public void setXpeOverMsg(String value) {
        setAttributeInternal(XPEOVERMSG, value);
    }

    /**
     * Gets the attribute value for XpeOverDesc, using the alias name XpeOverDesc.
     * @return the value of XpeOverDesc
     */
    public String getXpeOverDesc() {
        return (String) getAttributeInternal(XPEOVERDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeOverDesc.
     * @param value value to set the XpeOverDesc
     */
    public void setXpeOverDesc(String value) {
        setAttributeInternal(XPEOVERDESC, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * @return the associated entity XpeDccContractLineImpl.
     */
    public XpeDccContractLineImpl getXpeDccContractLine() {
        return (XpeDccContractLineImpl) getAttributeInternal(XPEDCCCONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as the associated entity XpeDccContractLineImpl.
     */
    public void setXpeDccContractLine(XpeDccContractLineImpl value) {
        setAttributeInternal(XPEDCCCONTRACTLINE, value);
    }

    /**
     * @param xpeContractId key constituent
     * @param xpeContractLine key constituent
     * @param xpeContractVersion key constituent
     * @param xpeContractOverNbr key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String xpeContractId, String xpeContractLine, String xpeContractVersion,
                                       BigDecimal xpeContractOverNbr) {
        return new Key(new Object[] { xpeContractId, xpeContractLine, xpeContractVersion, xpeContractOverNbr });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.XpeDccContractPricingOver");
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        String userName = "DB_ADMIN";
        ViewObjectImpl userInfoVO = (ViewObjectImpl)this.getDBTransaction().getRootApplicationModule().findViewObject("XpeDccUserInfoROVO");
        Row userInforVORow = userInfoVO.first();
        if(null!=userInforVORow)
            userName = (String)userInforVORow.getAttribute("USER_NAME");
        //INSERT
        if(i==this.DML_INSERT){
            this.setCreatedBy(userName);
            this.setLastUpdatedBy(userName);
        }
        //UPDATE
        if(i==this.DML_UPDATE) 
            this.setLastUpdatedBy(userName);
        
        super.doDML(i, transactionEvent);
    }
}

