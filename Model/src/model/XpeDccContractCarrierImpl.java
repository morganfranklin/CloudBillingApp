package model;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 01 02:58:04 EST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccContractCarrierImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        XpeContractId,
        XpePricingTermLine,
        XpeContractLine,
        XpeContractVersion,
        XpeCarrierId,
        XpeVehicleType,
        XpeSubNbr,
        XpeVehicleNbr,
        XpeRateOverride,
        XpeSurcharge,
        XpeContractCarrierId,
        CreatedBy,
        LastUpdatedBy,
        CreatedDate,
        LastUpdatedDate,
        XpeDccContractPricingTerm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int XPECONTRACTID = AttributesEnum.XpeContractId.index();
    public static final int XPEPRICINGTERMLINE = AttributesEnum.XpePricingTermLine.index();
    public static final int XPECONTRACTLINE = AttributesEnum.XpeContractLine.index();
    public static final int XPECONTRACTVERSION = AttributesEnum.XpeContractVersion.index();
    public static final int XPECARRIERID = AttributesEnum.XpeCarrierId.index();
    public static final int XPEVEHICLETYPE = AttributesEnum.XpeVehicleType.index();
    public static final int XPESUBNBR = AttributesEnum.XpeSubNbr.index();
    public static final int XPEVEHICLENBR = AttributesEnum.XpeVehicleNbr.index();
    public static final int XPERATEOVERRIDE = AttributesEnum.XpeRateOverride.index();
    public static final int XPESURCHARGE = AttributesEnum.XpeSurcharge.index();
    public static final int XPECONTRACTCARRIERID = AttributesEnum.XpeContractCarrierId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int XPEDCCCONTRACTPRICINGTERM = AttributesEnum.XpeDccContractPricingTerm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccContractCarrierImpl() {
    }

    /**
     * Gets the attribute value for XpeContractId, using the alias name XpeContractId.
     * @return the value of XpeContractId
     */
    public String getXpeContractId() {
        return (String) getAttributeInternal(XPECONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractId.
     * @param value value to set the XpeContractId
     */
    public void setXpeContractId(String value) {
        setAttributeInternal(XPECONTRACTID, value);
    }

    /**
     * Gets the attribute value for XpePricingTermLine, using the alias name XpePricingTermLine.
     * @return the value of XpePricingTermLine
     */
    public BigDecimal getXpePricingTermLine() {
        return (BigDecimal) getAttributeInternal(XPEPRICINGTERMLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpePricingTermLine.
     * @param value value to set the XpePricingTermLine
     */
    public void setXpePricingTermLine(BigDecimal value) {
        setAttributeInternal(XPEPRICINGTERMLINE, value);
    }

    /**
     * Gets the attribute value for XpeContractLine, using the alias name XpeContractLine.
     * @return the value of XpeContractLine
     */
    public String getXpeContractLine() {
        return (String) getAttributeInternal(XPECONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractLine.
     * @param value value to set the XpeContractLine
     */
    public void setXpeContractLine(String value) {
        setAttributeInternal(XPECONTRACTLINE, value);
    }

    /**
     * Gets the attribute value for XpeContractVersion, using the alias name XpeContractVersion.
     * @return the value of XpeContractVersion
     */
    public String getXpeContractVersion() {
        return (String) getAttributeInternal(XPECONTRACTVERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractVersion.
     * @param value value to set the XpeContractVersion
     */
    public void setXpeContractVersion(String value) {
        setAttributeInternal(XPECONTRACTVERSION, value);
    }

    /**
     * Gets the attribute value for XpeCarrierId, using the alias name XpeCarrierId.
     * @return the value of XpeCarrierId
     */
    public String getXpeCarrierId() {
        return (String) getAttributeInternal(XPECARRIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeCarrierId.
     * @param value value to set the XpeCarrierId
     */
    public void setXpeCarrierId(String value) {
        setAttributeInternal(XPECARRIERID, value);
    }

    /**
     * Gets the attribute value for XpeVehicleType, using the alias name XpeVehicleType.
     * @return the value of XpeVehicleType
     */
    public String getXpeVehicleType() {
        return (String) getAttributeInternal(XPEVEHICLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeVehicleType.
     * @param value value to set the XpeVehicleType
     */
    public void setXpeVehicleType(String value) {
        setAttributeInternal(XPEVEHICLETYPE, value);
    }

    /**
     * Gets the attribute value for XpeSubNbr, using the alias name XpeSubNbr.
     * @return the value of XpeSubNbr
     */
    public Integer getXpeSubNbr() {
        return (Integer) getAttributeInternal(XPESUBNBR);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeSubNbr.
     * @param value value to set the XpeSubNbr
     */
    public void setXpeSubNbr(Integer value) {
        setAttributeInternal(XPESUBNBR, value);
    }

    /**
     * Gets the attribute value for XpeVehicleNbr, using the alias name XpeVehicleNbr.
     * @return the value of XpeVehicleNbr
     */
    public String getXpeVehicleNbr() {
        return (String) getAttributeInternal(XPEVEHICLENBR);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeVehicleNbr.
     * @param value value to set the XpeVehicleNbr
     */
    public void setXpeVehicleNbr(String value) {
        setAttributeInternal(XPEVEHICLENBR, value);
    }

    /**
     * Gets the attribute value for XpeRateOverride, using the alias name XpeRateOverride.
     * @return the value of XpeRateOverride
     */
    public BigDecimal getXpeRateOverride() {
        return (BigDecimal) getAttributeInternal(XPERATEOVERRIDE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeRateOverride.
     * @param value value to set the XpeRateOverride
     */
    public void setXpeRateOverride(BigDecimal value) {
        setAttributeInternal(XPERATEOVERRIDE, value);
    }

    /**
     * Gets the attribute value for XpeSurcharge, using the alias name XpeSurcharge.
     * @return the value of XpeSurcharge
     */
    public BigDecimal getXpeSurcharge() {
        return (BigDecimal) getAttributeInternal(XPESURCHARGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeSurcharge.
     * @param value value to set the XpeSurcharge
     */
    public void setXpeSurcharge(BigDecimal value) {
        setAttributeInternal(XPESURCHARGE, value);
    }

    /**
     * Gets the attribute value for XpeContractCarrierId, using the alias name XpeContractCarrierId.
     * @return the value of XpeContractCarrierId
     */
    public BigDecimal getXpeContractCarrierId() {
        return (BigDecimal) getAttributeInternal(XPECONTRACTCARRIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for XpeContractCarrierId.
     * @param value value to set the XpeContractCarrierId
     */
    public void setXpeContractCarrierId(BigDecimal value) {
        setAttributeInternal(XPECONTRACTCARRIERID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * @return the associated entity XpeDccContractPricingTermImpl.
     */
    public XpeDccContractPricingTermImpl getXpeDccContractPricingTerm() {
        return (XpeDccContractPricingTermImpl) getAttributeInternal(XPEDCCCONTRACTPRICINGTERM);
    }

    /**
     * Sets <code>value</code> as the associated entity XpeDccContractPricingTermImpl.
     */
    public void setXpeDccContractPricingTerm(XpeDccContractPricingTermImpl value) {
        setAttributeInternal(XPEDCCCONTRACTPRICINGTERM, value);
    }

    /**
     * @param xpeContractCarrierId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal xpeContractCarrierId) {
        return new Key(new Object[] { xpeContractCarrierId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.XpeDccContractCarrier");
    }
    
    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        String userName = "DB_ADMIN";
        ViewObjectImpl userInfoVO = (ViewObjectImpl)this.getDBTransaction().getRootApplicationModule().findViewObject("XpeDccUserInfoROVO");
        Row userInforVORow = userInfoVO.first();
        if(null!=userInforVORow)
            userName = (String)userInforVORow.getAttribute("USER_NAME");
        //INSERT
        if(i==this.DML_INSERT) 
            this.setCreatedBy(userName);
        //UPDATE
        if(i==this.DML_UPDATE) 
            this.setLastUpdatedBy(userName);
        
        super.doDML(i, transactionEvent);
    }
}

