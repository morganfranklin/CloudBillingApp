package model;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 23 20:08:48 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XpeDccContractCarrierViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_XPEDCCCONTRACTCARRIER = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        XpeContractId,
        XpePricingTermLine,
        XpeContractLine,
        XpeContractVersion,
        XpeCarrierId,
        XpeVehicleType,
        XpeSubNbr,
        XpeVehicleNbr,
        XpeRateOverride,
        XpeSurcharge,
        XpeDccContractCarrierOverView,
        XpeDccDicVehicleTypes1,
        XpeDccCarriersView1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int XPECONTRACTID = AttributesEnum.XpeContractId.index();
    public static final int XPEPRICINGTERMLINE = AttributesEnum.XpePricingTermLine.index();
    public static final int XPECONTRACTLINE = AttributesEnum.XpeContractLine.index();
    public static final int XPECONTRACTVERSION = AttributesEnum.XpeContractVersion.index();
    public static final int XPECARRIERID = AttributesEnum.XpeCarrierId.index();
    public static final int XPEVEHICLETYPE = AttributesEnum.XpeVehicleType.index();
    public static final int XPESUBNBR = AttributesEnum.XpeSubNbr.index();
    public static final int XPEVEHICLENBR = AttributesEnum.XpeVehicleNbr.index();
    public static final int XPERATEOVERRIDE = AttributesEnum.XpeRateOverride.index();
    public static final int XPESURCHARGE = AttributesEnum.XpeSurcharge.index();
    public static final int XPEDCCCONTRACTCARRIEROVERVIEW = AttributesEnum.XpeDccContractCarrierOverView.index();
    public static final int XPEDCCDICVEHICLETYPES1 = AttributesEnum.XpeDccDicVehicleTypes1.index();
    public static final int XPEDCCCARRIERSVIEW1 = AttributesEnum.XpeDccCarriersView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XpeDccContractCarrierViewRowImpl() {
    }

    /**
     * Gets XpeDccContractCarrier entity object.
     * @return the XpeDccContractCarrier
     */
    public EntityImpl getXpeDccContractCarrier() {
        return (EntityImpl) getEntity(ENTITY_XPEDCCCONTRACTCARRIER);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_ID using the alias name XpeContractId.
     * @return the XPE_CONTRACT_ID
     */
    public String getXpeContractId() {
        return (String) getAttributeInternal(XPECONTRACTID);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_ID using the alias name XpeContractId.
     * @param value value to set the XPE_CONTRACT_ID
     */
    public void setXpeContractId(String value) {
        setAttributeInternal(XPECONTRACTID, value);
    }

    /**
     * Gets the attribute value for XPE_PRICING_TERM_LINE using the alias name XpePricingTermLine.
     * @return the XPE_PRICING_TERM_LINE
     */
    public BigDecimal getXpePricingTermLine() {
        return (BigDecimal) getAttributeInternal(XPEPRICINGTERMLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_PRICING_TERM_LINE using the alias name XpePricingTermLine.
     * @param value value to set the XPE_PRICING_TERM_LINE
     */
    public void setXpePricingTermLine(BigDecimal value) {
        setAttributeInternal(XPEPRICINGTERMLINE, value);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_LINE using the alias name XpeContractLine.
     * @return the XPE_CONTRACT_LINE
     */
    public String getXpeContractLine() {
        return (String) getAttributeInternal(XPECONTRACTLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_LINE using the alias name XpeContractLine.
     * @param value value to set the XPE_CONTRACT_LINE
     */
    public void setXpeContractLine(String value) {
        setAttributeInternal(XPECONTRACTLINE, value);
    }

    /**
     * Gets the attribute value for XPE_CONTRACT_VERSION using the alias name XpeContractVersion.
     * @return the XPE_CONTRACT_VERSION
     */
    public String getXpeContractVersion() {
        return (String) getAttributeInternal(XPECONTRACTVERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CONTRACT_VERSION using the alias name XpeContractVersion.
     * @param value value to set the XPE_CONTRACT_VERSION
     */
    public void setXpeContractVersion(String value) {
        setAttributeInternal(XPECONTRACTVERSION, value);
    }

    /**
     * Gets the attribute value for XPE_CARRIER_ID using the alias name XpeCarrierId.
     * @return the XPE_CARRIER_ID
     */
    public String getXpeCarrierId() {
        return (String) getAttributeInternal(XPECARRIERID);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_CARRIER_ID using the alias name XpeCarrierId.
     * @param value value to set the XPE_CARRIER_ID
     */
    public void setXpeCarrierId(String value) {
        setAttributeInternal(XPECARRIERID, value);
    }

    /**
     * Gets the attribute value for XPE_VEHICLE_TYPE using the alias name XpeVehicleType.
     * @return the XPE_VEHICLE_TYPE
     */
    public String getXpeVehicleType() {
        return (String) getAttributeInternal(XPEVEHICLETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_VEHICLE_TYPE using the alias name XpeVehicleType.
     * @param value value to set the XPE_VEHICLE_TYPE
     */
    public void setXpeVehicleType(String value) {
        setAttributeInternal(XPEVEHICLETYPE, value);
    }

    /**
     * Gets the attribute value for XPE_SUB_NBR using the alias name XpeSubNbr.
     * @return the XPE_SUB_NBR
     */
    public Integer getXpeSubNbr() {
        return (Integer) getAttributeInternal(XPESUBNBR);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_SUB_NBR using the alias name XpeSubNbr.
     * @param value value to set the XPE_SUB_NBR
     */
    public void setXpeSubNbr(Integer value) {
        setAttributeInternal(XPESUBNBR, value);
    }

    /**
     * Gets the attribute value for XPE_VEHICLE_NBR using the alias name XpeVehicleNbr.
     * @return the XPE_VEHICLE_NBR
     */
    public String getXpeVehicleNbr() {
        return (String) getAttributeInternal(XPEVEHICLENBR);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_VEHICLE_NBR using the alias name XpeVehicleNbr.
     * @param value value to set the XPE_VEHICLE_NBR
     */
    public void setXpeVehicleNbr(String value) {
        setAttributeInternal(XPEVEHICLENBR, value);
    }

    /**
     * Gets the attribute value for XPE_RATE_OVERRIDE using the alias name XpeRateOverride.
     * @return the XPE_RATE_OVERRIDE
     */
    public BigDecimal getXpeRateOverride() {
        return (BigDecimal) getAttributeInternal(XPERATEOVERRIDE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_RATE_OVERRIDE using the alias name XpeRateOverride.
     * @param value value to set the XPE_RATE_OVERRIDE
     */
    public void setXpeRateOverride(BigDecimal value) {
        setAttributeInternal(XPERATEOVERRIDE, value);
    }

    /**
     * Gets the attribute value for XPE_SURCHARGE using the alias name XpeSurcharge.
     * @return the XPE_SURCHARGE
     */
    public BigDecimal getXpeSurcharge() {
        return (BigDecimal) getAttributeInternal(XPESURCHARGE);
    }

    /**
     * Sets <code>value</code> as attribute value for XPE_SURCHARGE using the alias name XpeSurcharge.
     * @param value value to set the XPE_SURCHARGE
     */
    public void setXpeSurcharge(BigDecimal value) {
        setAttributeInternal(XPESURCHARGE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XpeDccContractCarrierOverView.
     */
    public RowIterator getXpeDccContractCarrierOverView() {
        return (RowIterator) getAttributeInternal(XPEDCCCONTRACTCARRIEROVERVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccDicVehicleTypes1.
     */
    public RowSet getXpeDccDicVehicleTypes1() {
        return (RowSet) getAttributeInternal(XPEDCCDICVEHICLETYPES1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> XpeDccCarriersView1.
     */
    public RowSet getXpeDccCarriersView1() {
        return (RowSet) getAttributeInternal(XPEDCCCARRIERSVIEW1);
    }
}

