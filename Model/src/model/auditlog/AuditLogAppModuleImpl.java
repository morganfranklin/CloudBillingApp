package model.auditlog;

import java.io.ByteArrayOutputStream;

import model.auditlog.common.AuditLogAppModule;

import oracle.jbo.ViewObject;
import oracle.jbo.XMLInterface;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import oracle.xml.parser.v2.XMLNode;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 03 00:14:40 CDT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AuditLogAppModuleImpl extends ApplicationModuleImpl implements AuditLogAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AuditLogAppModuleImpl() {
    }

    /**
     * Container's getter for XpeDccCfgCarriersAdtView1.
     * @return XpeDccCfgCarriersAdtView1
     */
    public ViewObjectImpl getXpeDccCfgCarriersAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgCarriersAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgCountiesAdtView1.
     * @return XpeDccCfgCountiesAdtView1
     */
    public ViewObjectImpl getXpeDccCfgCountiesAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgCountiesAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgDestinationsAdtView1.
     * @return XpeDccCfgDestinationsAdtView1
     */
    public ViewObjectImpl getXpeDccCfgDestinationsAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgDestinationsAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgOriginsAdtView1.
     * @return XpeDccCfgOriginsAdtView1
     */
    public ViewObjectImpl getXpeDccCfgOriginsAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgOriginsAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgPcsshtnamesAdtView1.
     * @return XpeDccCfgPcsshtnamesAdtView1
     */
    public ViewObjectImpl getXpeDccCfgPcsshtnamesAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgPcsshtnamesAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgPrdtserviceAdtView1.
     * @return XpeDccCfgPrdtserviceAdtView1
     */
    public ViewObjectImpl getXpeDccCfgPrdtserviceAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgPrdtserviceAdtView1");
    }

    /**
     * Container's getter for XpeDccCfgVehiclesAdtView1.
     * @return XpeDccCfgVehiclesAdtView1
     */
    public ViewObjectImpl getXpeDccCfgVehiclesAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCfgVehiclesAdtView1");
    }

    /**
     * Container's getter for XpeDccCntrctPrcngTermAdtView1.
     * @return XpeDccCntrctPrcngTermAdtView1
     */
    public ViewObjectImpl getXpeDccCntrctPrcngTermAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccCntrctPrcngTermAdtView1");
    }

    /**
     * Container's getter for XpeDccContractLineAdtView1.
     * @return XpeDccContractLineAdtView1
     */
    public ViewObjectImpl getXpeDccContractLineAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccContractLineAdtView1");
    }

    /**
     * Container's getter for XpeDccContractVersionAdtView1.
     * @return XpeDccContractVersionAdtView1
     */
    public ViewObjectImpl getXpeDccContractVersionAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccContractVersionAdtView1");
    }

    /**
     * Container's getter for XpeDccContractsAdtView1.
     * @return XpeDccContractsAdtView1
     */
    public ViewObjectImpl getXpeDccContractsAdtView1() {
        return (ViewObjectImpl) findViewObject("XpeDccContractsAdtView1");
    }
    
    public String writeVoToXml(String voName) {
        System.out.println("View Object Name: "+voName);
        ViewObject vo = this.findViewObject(voName);
        ByteArrayOutputStream opStream = new ByteArrayOutputStream();
        try {
            // Generating XML for All rows and adding it to Output Stream
            ((XMLNode) vo.writeXML(0, XMLInterface.XML_OPT_ALL_ROWS)).print(opStream);
            //System.out.println("VO XML: "+opStream);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return opStream.toString();
    }
}

