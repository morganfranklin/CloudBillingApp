SET SQLBLANKLINES ON

SPOOL XPE_DDL_180306C.LOG

--------------------------------------------------------
--  File created - Tuesday-March-06-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for View XPE_DCC_CREDIT_VW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_CREDIT_VW" ("CUST_ID", "TOTAL1", "TOTAL2", "CR_LIMIT", "BALANCE", "INTFC_BI", "BI_HDR", "PAYMENTS") AS 
  SELECT A.CUST_ID, SUM(A.BALANCE)+SUM(A.INTFC_BI)+SUM(A.BI_HDR)+SUM(A.PAYMENTS) AS TOTAL1 ,
CASE WHEN SUM(B.CIS_TRANS_BI_AMT2) IS NULL THEN 0 ELSE SUM(B.CIS_TRANS_BI_AMT2)  END AS TOTAL2,
sum (a.cr_limit) as cr_limit,
SUM(A.BALANCE) AS BALANCE,
SUM(A.INTFC_BI) AS INTFC_BI, 
SUM(A.BI_HDR) AS BI_HDR, 
SUM(A.PAYMENTS) AS PAYMENTS
FROM  SYSADM.PS_MOD_CUST_CR_BAL A, PS_CIS_XPE_IMPORT B
WHERE A.CUST_ID=B.CIS_TARGTCUST4DET1 (+)
AND 'FIN' = B.CIS_STAGE (+)
GROUP BY A.CUST_ID
;
--------------------------------------------------------
--  DDL for View XPE_DCC_CREDIT_VW2
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_CREDIT_VW2" ("CUST_ID", "TOTAL1", "TOTAL2", "CR_LIMIT", "CREDIT_USED", "CREDIT_STATUS", "BALANCE", "INTFC_BI", "BI_HDR", "PAYMENTS") AS 
  select a.cust_id, a.total1, a.total2, a.cr_limit, (a.total1+a.total2)/a.cr_limit as credit_used,
case when ( (a.total1+a.total2)/a.cr_limit ) <0.8 then '1' else 
case when ( (a.total1+a.total2)/a.cr_limit ) >=0.8 and ( (a.total1+a.total2)/a.cr_limit ) <1.00 then '2' else
'3'
end end as credit_status,
A.BALANCE, A.INTFC_BI, A.BI_HDR, A.PAYMENTS
from xpe_dcc_credit_vw a
where cr_limit != 0
;
--------------------------------------------------------
--  DDL for View XPE_DCC_MATCH_ESUMM_VW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_MATCH_ESUMM_VW" ("SITE", "TICKET_DT_MIN", "TICKET_DT_MAX", "TICKET_COUNT") AS 
  SELECT  B.SITE_DESC AS SITE, 
MIN(A.KEY_DATE_01) AS TICKET_DT_MIN, 
MAX(A.KEY_DATE_01) AS TICKET_DT_MAX, 
COUNT(A.KEY2) AS TICKET_COUNT FROM PS_CIS_XPE_IMPORT A, XPE_DCC_CFG_PCS B
WHERE A.CIS_STATUS = 'E' AND UPPER(A.KEY1) = UPPER(B.DB_LINK)
GROUP BY B.SITE_DESC
;
--------------------------------------------------------
--  DDL for View XPE_DCC_NEW_CARRIERS_VW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_NEW_CARRIERS_VW" ("PCSSHORTNAME_ID", "XPE_CARRIER_ID") AS 
  SELECT B.PCSSHORTNAME_ID || 'i'
, D.XPE_CARRIER_ID
FROM XPE_DCC_CONTRACTS_ADT A, 
XPE_DCC_CFG_PCSSHORTNAMES B, 
XPE_DCC_CONTRACTS C, 
XPE_DCC_CONTRACT_CARRIER D, 
XPE_DCC_CONTRACT_VERSION E 
WHERE 
A.SYNCDONE IN ('N','E','P') 
AND A.XPE_DCC_PCSNAME=B.PCSSHORTNAME_ID
AND B.PCSSHORTNAME_ID=C.XPE_DCC_PCSNAME 
AND E.XPE_CONTRACT_ID = C.XPE_CONTRACT_ID 
AND D.XPE_CONTRACT_ID = C.XPE_CONTRACT_ID 
AND E.XPE_CONTRACT_VERSION=D.XPE_CONTRACT_VERSION 
AND E.XPE_CONTRACT_STATUS='APR'
GROUP BY B.PCSSHORTNAME_ID
, D.XPE_CARRIER_ID
;
--------------------------------------------------------
--  DDL for View XPE_DCC_NEW_SWS_VW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_NEW_SWS_VW" ("PCSSHORTNAME_ID", "XPE_SW_APPR_NBR", "XPE_START_DATE") AS 
  SELECT B.PCSSHORTNAME_ID || 'i' 
, D.XPE_SW_APPR_NBR
, E.XPE_START_DATE 
FROM XPE_DCC_CONTRACT_LINE_ADT A, 
XPE_DCC_CFG_PCSSHORTNAMES B, 
XPE_DCC_CONTRACTS C, 
XPE_DCC_CONTRACT_LINE D, 
XPE_DCC_CONTRACT_VERSION E 
WHERE 
A.SYNCDONE IN ('N','E','P') 
AND A.XPE_CONTRACT_ID=D.XPE_CONTRACT_ID
AND A.XPE_CONTRACT_VERSION=D.XPE_CONTRACT_VERSION
AND A.XPE_CONTRACT_LINE=D.XPE_CONTRACT_LINE
AND B.PCSSHORTNAME_ID=C.XPE_DCC_PCSNAME 
AND E.XPE_CONTRACT_ID = C.XPE_CONTRACT_ID 
AND D.XPE_CONTRACT_ID = C.XPE_CONTRACT_ID 
AND E.XPE_CONTRACT_VERSION=D.XPE_CONTRACT_VERSION 
AND E.XPE_CONTRACT_STATUS='APR'
AND D.XPE_SW_APPR_NBR IS NOT NULL
GROUP BY B.PCSSHORTNAME_ID, D.XPE_SW_APPR_NBR,
E.XPE_START_DATE
;
--------------------------------------------------------
--  DDL for View XPE_DCC_NEWCUST_VW
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "XPE_DCC_NEWCUST_VW" ("PCSSHORTNAME_ID", "PCSSHORT_NAME", "ADDRESS1", "ADDRESS2", "CITY", "STATE", "POSTAL", "COUNTRY", "STATUS", "CREDIT_STATUS") AS 
  SELECT A.PCSSHORTNAME_ID || CASE WHEN E.XPE_CONTRACT_DIRECTION IS NULL THEN 'i' ELSE E.XPE_CONTRACT_DIRECTION END AS  PCSSHORTNAME_ID,
B.PCSSHORT_NAME,
C.ADDRESS1,
C.ADDRESS2,
C.CITY,
C.STATE,
C.POSTAL,
C.COUNTRY,
CASE WHEN ( B.INACTIVE = 'N' OR B.INACTIVE IS NULL ) THEN 'A' ELSE 'I' END AS STATUS,
B.CREDIT_STATUS
FROM XPE_DCC_CFG_PCSSHTNAMES_ADT A, XPE_DCC_CFG_PCSSHORTNAMES B, PS_CUST_ADDRESS C, XPE_DCC_CONTRACTS D, XPE_DCC_CONTRACT_VERSION E WHERE A.SYNCDONE IN ('N','E','P') AND B.PCSSHORTNAME_ID=A.PCSSHORTNAME_ID AND C.SETID='MASTR' AND C.CUST_ID=B.COV_BILL_ID AND C.ADDRESS_SEQ_NUM=B.COV_BILL_LOC_NUM AND C.EFF_STATUS='A' AND A.PCSSHORTNAME_ID=D.XPE_DCC_PCSNAME AND D.XPE_CONTRACT_ID=E.XPE_CONTRACT_ID
;

SPOOL OFF;
